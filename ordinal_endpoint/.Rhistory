"Frequentist mixed model")
names(res) <- c("Mean bias", "Coverage", "Type I error rate")
print(format.r(res, k))
# opts <- options(knitr.kable.NA = "")
knitr::kable(format.r(res, k), format = "latex", midrule = "")
# opts <- options(knitr.kable.NA = "")
knitr::kable(format.r(res, k), format = "latex", linesep = "")
rm(list = ls())
source("do_simulation.R")
source("generate_data.R")
source("models.R")
source("evaluate.R")
load("scenarios_1/sim.study1.RData")
sim.study1$p_res
eval.sim(sim.study1)
source("evaluate.R")
eval.sim(sim.study1)
source("evaluate.R")
sim.study <- sim.study1
d_true = 0; k = 4
n.sim <- length(sim.study$res[[1]])
bias.fixed.normal <- bias.random.normal <- numeric(n.sim)
coverage.fixed.normal <- coverage.random.normal <- numeric(n.sim)
for (i in 1:n.sim) {
# Bias:
bias.fixed.normal[i] <- sim.study$res[[1]][[i]]$summary.fit[[1]]["d[3]", "Mean"] - d_true
bias.random.normal[i] <- sim.study$res[[2]][[i]]$summary.fit[[1]]["d[3]", "Mean"] - d_true
# Coverage:
ci.low <- sim.study$res[[1]][[i]]$summary.fit[[2]]["d[3]", "2.5%"]
ci.up <- sim.study$res[[1]][[i]]$summary.fit[[2]]["d[3]", "97.5%"]
coverage.fixed.normal[i] <- (ci.low <= d_true) & (ci.up >= d_true)
ci.low <- sim.study$res[[2]][[i]]$summary.fit[[2]]["d[3]", "2.5%"]
ci.up <- sim.study$res[[2]][[i]]$summary.fit[[2]]["d[3]", "97.5%"]
coverage.random.normal[i] <- ((ci.low <= d_true) & (ci.up >= d_true))
}
bias.fixed.normal <- mean(bias.fixed.normal)
bias.random.normal <- mean(bias.random.normal)
coverage.fixed.normal <- mean(coverage.fixed.normal)
coverage.random.normal <- mean(coverage.random.normal)
res <- data.frame("fixed.normal" = c(bias.fixed.normal, coverage.fixed.normal, NA),
"random.normal" = c(bias.random.normal, coverage.random.normal, NA)
)
res
# res$typeI <- as.vector(as.numeric(sim.study$p_res[2, ]))
res <- rbind(res, as.vector(as.numeric(sim.study$p_res[2, ])))
res <- data.frame("fixed.normal" = c(bias.fixed.normal, coverage.fixed.normal, NA),
"random.normal" = c(bias.random.normal, coverage.random.normal, NA),
"t.test" = NA,
"mixed.model" = NA)
res
# res <- data.frame("Bias" = c(bias.fixed.normal, bias.random.normal, NA, NA),
#                   "Coverage" = c(coverage.fixed.normal, coverage.random.normal, NA, NA)
# )
# res$typeI <- as.vector(as.numeric(sim.study$p_res[2, ]))
res <- rbind(res, as.vector(as.numeric(sim.study$p_res[2, ])))
res
# res <- data.frame("Bias" = c(bias.fixed.normal, bias.random.normal, NA, NA),
#                   "Coverage" = c(coverage.fixed.normal, coverage.random.normal, NA, NA)
# )
# res$typeI <- as.vector(as.numeric(sim.study$p_res[2, ]))
res[3, ] <- as.vector(as.numeric(sim.study$p_res[2, ]))
res
res <- data.frame("fixed.normal" = c(bias.fixed.normal, coverage.fixed.normal, NA),
"random.normal" = c(bias.random.normal, coverage.random.normal, NA),
"t.test" = NA,
"mixed.model" = NA)
# res <- data.frame("Bias" = c(bias.fixed.normal, bias.random.normal, NA, NA),
#                   "Coverage" = c(coverage.fixed.normal, coverage.random.normal, NA, NA)
# )
# res$typeI <- as.vector(as.numeric(sim.study$p_res[2, ]))
res[3, ] <- as.vector(as.numeric(sim.study$p_res[2, ]))
res
row.names(res) <- c("Bayesian fixed effects model",
"Bayesian random effects model",
"t-test",
"Frequentist mixed model")
# row.names(res) <- c("Bayesian fixed effects model",
#                     "Bayesian random effects model",
#                     "t-test",
#                     "Frequentist mixed model")
# names(res) <- c("Mean bias", "Coverage", "Type I error rate")
row.names(res) <- c("Mean bias", "Coverage", "Type I error rate")
res
# print(format.r(res, k))
print(format.r(res, k))
source("evaluate.R")
eval.sim(sim.study1)
source("evaluate.R")
eval.sim(sim.study1)
rm(sim.study1)
load("scenarios_2/sim.study2.RData")
sim.study2$p_res
eval.sim(sim.study2)
rm(sim.study2)
load("scenarios_2/sim.study7.RData")
sim.study7$p_res
eval.sim(sim.study7)
rm(sim.study7)
load("scenarios_1/sim.study1.RData")
sim.study1$p_res
eval.sim(sim.study1, k = 2)
rm(sim.study1)
load("scenarios_2/sim.study2.RData")
sim.study2$p_res
eval.sim(sim.study2, k = 2)
rm(sim.study2)
# evaluate results:
load("scenarios_2/sim.study7.RData")
sim.study7$p_res
eval.sim(sim.study7, k = 2)
rm(sim.study7)
load("scenarios_2/sim.study3.RData")
sim.study3$p_res
eval.sim(sim.study3, d_true = 0.122)
rm(sim.study3)
load("scenarios_2/sim.study4.RData")
sim.study4$p_res
eval.sim(sim.study4, d_true = 0.27)
rm(sim.study4)
load("scenarios_2/sim.study5.RData")
sim.study5$p_res
eval.sim(sim.study5, d_true = 0.1225)
rm(sim.study5)
load("scenarios_2/sim.study6.RData")
sim.study6$p_res
eval.sim(sim.study6, d_true = 0.2733333)
rm(sim.study6)
load("scenarios_2/sim.study3.RData")
sim.study3$p_res
eval.sim(sim.study3, d_true = 0.122, k = 4)
rm(sim.study3)
load("scenarios_2/sim.study3.RData")
sim.study3$p_res
eval.sim(sim.study3, d_true = 0.122, k = 2)
rm(sim.study3)
# evaluate results:
load("scenarios_2/sim.study4.RData")
sim.study4$p_res
eval.sim(sim.study4, d_true = 0.27, k = 2)
rm(sim.study4)
# evaluate results:
load("scenarios_2/sim.study5.RData")
sim.study5$p_res
eval.sim(sim.study5, d_true = 0.1225, k = 2)
rm(sim.study5)
(25*2+32)/3
sample(1:99999, 1)
# This is the file to actually do the simulation study. All other files need to be loaded.
source("do_simulation.R")
source("generate_data.R")
source("models.R")
source("evaluate.R")
load("scenarios_3/sim.study6.RData")
sim.study6$p_res
eval.sim(sim.study6, d_true = 0.28)
rm(sim.study6)
load("scenarios_3/sim.study6.RData")
sim.study6$p_res
eval.sim(sim.study6, d_true = 0.28, k = 2)
rm(sim.study6)
load("scenarios_2/sim.study3.RData")
sim.study3$p_res
eval.sim(sim.study3, d_true = 0.122, k = 2)
rm(sim.study3)
load("scenarios_2/sim.study4.RData")
sim.study4$p_res
eval.sim(sim.study4, d_true = 0.27, k = 2)
rm(sim.study4)
load("scenarios_2/sim.study5.RData")
sim.study5$p_res
eval.sim(sim.study5, d_true = 0.1225, k = 2)
rm(sim.study5)
load("scenarios_3/sim.study6.RData")
sim.study6$p_res
eval.sim(sim.study6, d_true = 0.28, k = 2)
rm(sim.study6)
load("scenarios_2/sim.study8.RData")
sim.study8$p_res
eval.sim(sim.study8)
rm(sim.study8)
load("scenarios_2/sim.study8.RData")
sim.study8$p_res
eval.sim(sim.study8, k = 2)
rm(sim.study8)
load("scenarios_1/sim.study1.RData")
sim.study1$p_res
eval.sim(sim.study1, k = 4)
rm(sim.study1)
load("scenarios_2/sim.study2.RData")
sim.study2$p_res
eval.sim(sim.study2, k = 4)
rm(sim.study2)
# evaluate results:
load("scenarios_2/sim.study7.RData")
sim.study7$p_res
eval.sim(sim.study7, k = 4)
rm(sim.study7)
load("scenarios_2/sim.study8.RData")
sim.study8$p_res
eval.sim(sim.study8, k = 4)
rm(sim.study8)
load("scenarios_1/sim.study1.RData")
sim.study1$p_res
eval.sim(sim.study1, k = 2)
rm(sim.study1)
load("scenarios_2/sim.study2.RData")
sim.study2$p_res
eval.sim(sim.study2, k = 2)
rm(sim.study2)
# evaluate results:
load("scenarios_2/sim.study7.RData")
sim.study7$p_res
eval.sim(sim.study7, k = 2)
rm(sim.study7)
load("scenarios_2/sim.study8.RData")
sim.study8$p_res
eval.sim(sim.study8, k = 2)
rm(sim.study8)
# evaluate results:
load("scenarios_2/sim.study2.RData")
sim.study2$p_res
eval.sim(sim.study2, k = 2)
source("do_simulation.R")
source("generate_data.R")
source("models.R")
source("evaluate.R")
load("scenarios_2/sim.study2.RData")
sim.study2$p_res
eval.sim(sim.study2, k = 2)
rm(sim.study2)
load("scenarios_4/sim.study9.RData")
sim.study9$p_res
eval.sim(sim.study9, k = 2)
rm(sim.study9)
load("scenarios_1/sim.study1.RData")
sim.study1$p_res
eval.sim(sim.study1, k = 3)
rm(sim.study1)
load("scenarios_2/sim.study2.RData")
sim.study2$p_res
eval.sim(sim.study2, k = 3)
rm(sim.study2)
load("scenarios_2/sim.study7.RData")
sim.study7$p_res
eval.sim(sim.study7, k = 3)
rm(sim.study7)
# evaluate results:
load("scenarios_2/sim.study8.RData")
sim.study8$p_res
eval.sim(sim.study8, k = 3)
rm(sim.study8)
load("scenarios_2/sim.study3.RData")
sim.study3$p_res
eval.sim(sim.study3, d_true = 0.122, k = 3)
rm(sim.study3)
load("scenarios_2/sim.study4.RData")
sim.study4$p_res
eval.sim(sim.study4, d_true = 0.27, k = 3)
rm(sim.study4)
load("scenarios_2/sim.study5.RData")
sim.study5$p_res
eval.sim(sim.study5, d_true = 0.1225, k = 2)
rm(sim.study5)
load("scenarios_2/sim.study5.RData")
sim.study5$p_res
eval.sim(sim.study5, d_true = 0.1225, k = 3)
rm(sim.study5)
# evaluate results:
load("scenarios_3/sim.study6.RData")
sim.study6$p_res
eval.sim(sim.study6, d_true = 0.28, k = 3)
rm(sim.study6)
# evaluate results:
load("scenarios_1/sim.study1.RData")
sim.study1$p_res
eval.sim(sim.study1, k = 3)
rm(sim.study1)
load("scenarios_2/sim.study2.RData")
sim.study2$p_res
eval.sim(sim.study2, k = 3)
rm(sim.study2)
# evaluate results:
load("scenarios_2/sim.study3.RData")
sim.study3$p_res
eval.sim(sim.study3, d_true = 0.122, k = 3)
rm(sim.study3)
load("scenarios_2/sim.study7.RData")
sim.study7$p_res
eval.sim(sim.study7, k = 3)
rm(sim.study7)
# evaluate results:
load("scenarios_2/sim.study8.RData")
sim.study8$p_res
eval.sim(sim.study8, k = 3)
rm(sim.study8)
# evaluate results:
load("scenarios_4/sim.study9.RData")
sim.study9$p_res
eval.sim(sim.study9, k = 2)
rm(sim.study9)
load("scenarios_4/sim.study9.RData")
sim.study9$p_res
eval.sim(sim.study9, k = 3)
rm(sim.study9)
load("scenarios_2/sim.study3.RData")
sim.study3$p_res
eval.sim(sim.study3, d_true = 0.122, k = 3)
rm(sim.study3)
load("scenarios_2/sim.study4.RData")
sim.study4$p_res
eval.sim(sim.study4, d_true = 0.27, k = 3)
rm(sim.study4)
load("scenarios_2/sim.study5.RData")
sim.study5$p_res
eval.sim(sim.study5, d_true = 0.1225, k = 3)
rm(sim.study5)
load("scenarios_3/sim.study6.RData")
sim.study6$p_res
eval.sim(sim.study6, d_true = 0.28, k = 3)
rm(sim.study6)
load("scenarios_1/sim.study1.RData")
sim.study1$p_res
eval.sim(sim.study1, k = 4)
rm(sim.study1)
load("scenarios_2/sim.study2.RData")
sim.study2$p_res
eval.sim(sim.study2, k = 3)
source("do_simulation.R")
source("generate_data.R")
source("models.R")
source("evaluate.R")
load("scenarios_2/sim.study2.RData")
sim.study2$p_res
eval.sim(sim.study2, k = 3)
rm(sim.study2)
source("do_simulation.R")
source("generate_data.R")
source("models.R")
source("evaluate.R")
# evaluate results:
load("scenarios_1/sim.study1.RData")
sim.study1$p_res
eval.sim(sim.study1, k = 4)
rm(sim.study1)
load("scenarios_1/sim.study1.RData")
sim.study1$p_res
eval.sim(sim.study1, k = 3)
rm(sim.study1)
load("scenarios_1/sim.study1.RData")
sim.study1$p_res
eval.sim(sim.study1, k = 5)
round(0.0125, 3)
round(0.0525, 3)
rm(sim.study1)
# evaluate results:
load("scenarios_2/sim.study2.RData")
sim.study2$p_res
eval.sim(sim.study2, k = 3)
rm(sim.study2)
load("scenarios_2/sim.study2.RData")
sim.study2$p_res
eval.sim(sim.study2, k = 4)
rm(sim.study2)
# evaluate results:
load("scenarios_4/sim.study9.RData")
sim.study9$p_res
eval.sim(sim.study9, k = 3)
rm(sim.study9)
load("scenarios_4/sim.study9.RData")
sim.study9$p_res
eval.sim(sim.study9, k = 4)
rm(sim.study9)
load("scenarios_4/sim.study9.RData")
sim.study9$p_res
eval.sim(sim.study9, k = 5)
rm(sim.study9)
# evaluate results:
load("scenarios_2/sim.study7.RData")
sim.study7$p_res
eval.sim(sim.study7, k = 3)
rm(sim.study7)
# evaluate results:
load("scenarios_2/sim.study7.RData")
sim.study7$p_res
eval.sim(sim.study7, k = 4)
rm(sim.study7)
load("scenarios_2/sim.study8.RData")
sim.study8$p_res
eval.sim(sim.study8, k = 4)
rm(sim.study8)
load("scenarios_2/sim.study3.RData")
sim.study3$p_res
eval.sim(sim.study3, d_true = 0.122, k = 4)
rm(sim.study3)
load("scenarios_2/sim.study4.RData")
sim.study4$p_res
eval.sim(sim.study4, d_true = 0.27, k = 3)
rm(sim.study4)
load("scenarios_2/sim.study4.RData")
sim.study4$p_res
eval.sim(sim.study4, d_true = 0.27, k = 4)
rm(sim.study4)
load("scenarios_2/sim.study5.RData")
sim.study5$p_res
eval.sim(sim.study5, d_true = 0.1225, k = 3)
rm(sim.study5)
load("scenarios_2/sim.study5.RData")
sim.study5$p_res
eval.sim(sim.study5, d_true = 0.1225, k = 4)
rm(sim.study5)
load("scenarios_3/sim.study6.RData")
sim.study6$p_res
eval.sim(sim.study6, d_true = 0.28, k = 3)
rm(sim.study6)
load("scenarios_3/sim.study6.RData")
sim.study6$p_res
eval.sim(sim.study6, d_true = 0.28, k = 4)
rm(sim.study6)
load("scenarios_1/sim.study1.RData")
sim.study1$p_res
eval.sim(sim.study1, k = 4)
rm(sim.study1)
load("scenarios_2/sim.study2.RData")
sim.study2$p_res
eval.sim(sim.study2, k = 4)
rm(sim.study2)
load("scenarios_2/sim.study3.RData")
sim.study3$p_res
eval.sim(sim.study3, d_true = 0.122, k = 4)
rm(sim.study3)
# evaluate results:
load("scenarios_4/sim.study9.RData")
sim.study9$p_res
eval.sim(sim.study9, k = 4)
rm(sim.study9)
# evaluate results:
load("scenarios_2/sim.study7.RData")
sim.study7$p_res
eval.sim(sim.study7, k = 4)
rm(sim.study7)
# evaluate results:
load("scenarios_2/sim.study8.RData")
sim.study8$p_res
eval.sim(sim.study8, k = 4)
rm(sim.study8)
# evaluate results:
load("scenarios_2/sim.study3.RData")
sim.study3$p_res
eval.sim(sim.study3, d_true = 0.122, k = 4)
rm(sim.study3)
# evaluate results:
load("scenarios_2/sim.study4.RData")
sim.study4$p_res
eval.sim(sim.study4, d_true = 0.27, k = 4)
rm(sim.study4)
# evaluate results:
load("scenarios_2/sim.study5.RData")
sim.study5$p_res
eval.sim(sim.study5, d_true = 0.1225, k = 4)
rm(sim.study5)
# evaluate results:
load("scenarios_3/sim.study6.RData")
sim.study6$p_res
eval.sim(sim.study6, d_true = 0.28, k = 4)
rm(sim.study6)
(25*2+17*2)3
(25*2+17*2)/3
source("do_simulation.R")
source("generate_data.R")
source("models.R")
source("evaluate.R")
format.r(0.5)
format.r(0.125)
format.r(0.0125)
format.r(0.0525)
floor(0.0525)
floor(0.0525, 3)
?floor
floor(0.0525*10000)
floor(0.0525*1000)
ceiling(0.0525*1000)
gewtd()
getwd()
setwd("
setwd("/home/lorenz/Git/paircompsim/normal_endpoint/")
source("do_simulation.R")
source("generate_data.R")
source("models.R")
source("evaluate.R")
sim.study1 <- do.sim(n.sim = 10,
model = c("fixed.normal", "random.normal",
"t.test", "fr.mixed"),
seed = 12345, alpha = 0.05,
n.cores = 5)
# evaluate results:
eval.sim(sim.study1, k = 5)
setwd("../ordinal_endpoint/")
source("do_simulation.R")
source("generate_data.R")
source("models.R")
source("evaluate.R")
sim.study1 <- do.sim(n.sim = 10,
model = c("fixed.ordinal", "random.ordinal",
"wilcox", "wilcox.clust"),
seed = 76057, alpha = 0.05,
sigma_AB = 2, sigma_AC = 2, sigma_CB = 2,
n.burnin = 1000, n.iter = 10000, n.thin = 2,
n.cores = 6)
# evaluate results:
eval.sim(sim.study1, k = 5)
View(fixed.ordinal)
10000/4
